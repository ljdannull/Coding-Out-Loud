---
title: "Keyboard Visualization"
author: "Lukas Dannull"
date: "4/18/22"
format: html
editor: visual
---

```{r install packages}
#devtools::install_github("sharlagelfand/ggkeyboard", ref = "main")
```

```{r load packages}
library(tidyverse)
library(ggkeyboard)
library(countcolors)
```

```{r load data, get first letter counts}
wordle = read_csv("https://raw.githubusercontent.com/tabatkins/wordle-list/main/words", col_names="word")

wordle = wordle %>% 
  mutate(first_letter = str_sub(word, start=1, end=1))
first_counts = wordle %>% count(first_letter)
```

```{r summary statistics of counts}
first_counts %>%
  summarise(
    min = min(n),
    mean = mean(n),
    sd = sd(n),
    max = max(n),
    q20 = quantile(n, 0.20),
    q40 = quantile(n, 0.40),
    q60 = quantile(n, 0.60),
    q80 = quantile(n, 0.80)
  )
```

```{r get color from count of occurrences}
color_scale = function(x) {
  pct = x / 1560
  return(rgb(pct, max(0, pct - 0.5), (1 - pct) / 2))
}
color_scale_rgb = function(x) {
  pct = x / 1560
  return(c(pct, max(0, pct - 0.5), (1 - pct) / 2))
}
alpha = function(x) {
  pct = x / 1560
  #return(0.2 + pct * 0.3)
  return(0.7 - pct * 0.3)
}
colors = first_counts %>% mutate(color = sapply(n, color_scale)) %>% mutate(first_letter = sapply(first_letter, toupper))
colors
```

```{r order keys right to left, top to bottom}
keys <- read_csv("https://raw.githubusercontent.com/sharlagelfand/ggkeyboard/061f0d9084d76d576200e81439311983e1d50d93/data-raw/sixty_percent.csv")
wordle_counts_ordered <- keys %>% 
  select(key) %>%
  left_join(colors, by = c("key" = "first_letter"))

wordle_counts_ordered$n[is.na(wordle_counts_ordered$n)] = 0
wordle_counts_ordered = wordle_counts_ordered %>% mutate(color = sapply(n, color_scale),
                                                         brightness = sapply(n, alpha))
wordle_counts_ordered
```

```{r keyboard visualization}
ggkeyboard(sixty_percent, palette = keyboard_palette("magic")) %>%
  highlight_keys(wordle_counts_ordered$key, fill = wordle_counts_ordered$color, alpha = wordle_counts_ordered$brightness,
                 colour = NA)
#ggsave("keyboard.png")
```

```{r get pixels to display color scale}
color_bar = sapply(1:1560, color_scale_rgb)
rgb_vec = color_bar %>% t()
rgb_mat = array(0, c(50, 1560, 3))
for (i in 1:50) {
  rgb_mat[i, 1:1560, 1] = rgb_vec[1:1560, 1]
  rgb_mat[i, 1:1560, 2] = rgb_vec[1:1560, 2]
  rgb_mat[i, 1:1560, 3] = rgb_vec[1:1560, 3]
}
```

```{r visualize color scale}
df = tibble(x = seq(1, 1560, 10), n=1, color = sapply(1:1560, color_scale)[seq(1, 1560, 10)])
#png("color_scale.png")
barplot(space = 0, height = df$n, col = df$color, names.arg = df$x, xlab = "Letter Frequency", axes=F, main = "Color Scale", border=NA)
#dev.off()
```
